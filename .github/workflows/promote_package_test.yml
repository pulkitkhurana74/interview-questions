name: Promote Python Package

on:
  repository_dispatch:
    types: [cloudsmith-package-synced]

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_STAGING_REPO: "staging"
  CLOUDSMITH_PRODUCTION_REPO: "production"
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}

permissions:
  contents: read
  actions: read
  id-token: write

jobs:
  promote:
    runs-on: ubuntu-latest
    steps:
      - name: Install Cloudsmith CLI
        uses: cloudsmith-io/cloudsmith-cli-action@master
        with:
          oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}
          oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE_SLUG }}

      - name: Query package identifier
        id: query
        run: |
          PACKAGE_NAME="${{ github.event.client_payload.package_identifier }}"
          PACKAGE_VERSION="${{ github.event.client_payload.package_version }}"
          PACKAGE_QUERY="name:${PACKAGE_NAME} version:${PACKAGE_VERSION}"

          echo "Searching for package with query: $PACKAGE_QUERY"

          PACKAGE_DATA=$(cloudsmith list package ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }} -q "$PACKAGE_QUERY" -F json)
          IDENTIFIER=$(echo "$PACKAGE_DATA" | jq -r '.data[0].identifier_perm')

          if [ -z "$IDENTIFIER" ] || [ "$IDENTIFIER" = "null" ]; then
            echo "Failed to find package identifier"
            exit 1
          fi

          echo "Found identifier: $IDENTIFIER"
          echo "IDENTIFIER=$IDENTIFIER" >> $GITHUB_ENV

      - name: Tag package as ready-for-production
        run: |
          cloudsmith tag add \
            ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$IDENTIFIER \
            ready-for-production
        shell: bash

      - name: Promote package to production
        run: |
          cloudsmith mv --yes \
            ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$IDENTIFIER \
            ${{ env.CLOUDSMITH_PRODUCTION_REPO }}
        shell: bash
